// <auto-generated />
using System;
using LazyPythons.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LazyPythons.Sql.Migrations
{
    [DbContext(typeof(LazyPhytonsContext))]
    partial class LazyPhytonsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LazyPythons.Sql.Data.Beverage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LinkToImage");

                    b.Property<Guid>("MenuId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Caffe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("DistanceFromOffice");

                    b.Property<bool>("IsFreeBeverages");

                    b.Property<long>("Latitude");

                    b.Property<string>("LinkToImage");

                    b.Property<long>("Longitude");

                    b.Property<int>("Lunch2Price");

                    b.Property<int>("Lunch3Price");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Notes");

                    b.Property<short>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Caffes");
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Dish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("LinkToImage");

                    b.Property<Guid>("MenuId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CaffeId");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CaffeId")
                        .IsUnique();

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Beverage", b =>
                {
                    b.HasOne("LazyPythons.Sql.Data.Menu", "Menu")
                        .WithMany("Beverages")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Dish", b =>
                {
                    b.HasOne("LazyPythons.Sql.Data.Menu", "Menu")
                        .WithMany("Dishes")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LazyPythons.Sql.Data.Menu", b =>
                {
                    b.HasOne("LazyPythons.Sql.Data.Caffe", "Caffe")
                        .WithOne("Menu")
                        .HasForeignKey("LazyPythons.Sql.Data.Menu", "CaffeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
